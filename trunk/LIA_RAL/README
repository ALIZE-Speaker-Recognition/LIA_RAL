##########################################################
#      MISTRAL PROJECT - 2007 / 2008                        
#      http://mistral.univ-avignon.fr
#				  
# Readme File of LIA_RAL package		
#							
# Last edit: 25 February 2009
# Last editor: florian.verdet@univ-avignon.fr 
# Version : 2.004
#
##########################################################

LIA_RAL is an open project. Feel free to contact us to propose to work on it ! 

###### GNU/GPL Licence v2 and higher ################
News:
----
Channel Compensation techniques have been integrated (Factor Analysis model, NAP).
Use of SVM classifier is now possible with linear kernels, and GMM supervectors.
*** Requirements: 
	- SVM: libsvm http://www.csie.ntu.edu.tw/~cjlin/libsvm/ see README file in SVM directory
	- SVDLIBC: to perform a SVD for NAP, http://tedlab.mit.edu/~dr/SVDLIBC/, see README file in CovIntra directory
Make is still recursive, but the best way to compile is to go into one app directory and then type make


News:
---------------------------------------------------------------------------------------------------------------------------
New architecture. The package LIA_RAL (LIA_SpkTools library) is compulsory in order to use the LIA system. Please download it.
The whole LIA_RAL package has been cut into three distinct packages to download depending on your needs:
- LIA_SpkDet: Speaker detection (Id, verification, tracking,...)
- LIA_Seg: To work on speaker diarization
- LIA_Utils: Small but useful utilities
Please download one or all the packages and place them into the LIA_RAL directory.
If you're working with only one package, please edit the makefile and comment the lines mentionning the packages you are not using.
----------------------------------------------------------------------------------------------------------------------------

New Features:
-------------------------------------------------------------------------------------------------------------
Frame Pruning: Morphological filter, Channel overlapping pruning
Segmental Processing; Label File based processing, Segmental LLR computation, normalization, decision
Feature mapping
Multiple models processing: GMM models by label
Frame weighting for LLR computation
Mutliple weighting funcions for fusion
-------------------------------------------------------------------------------------------------------------

I. Contents
-----------

Utilities for Automatic Speaker Recognition developed by the LIA.
All of them are based on the ALIZE platform, part of the MISTRAL Project:
http://mistral.univ-avignon.fr

See `foo --help`, for help on each program.
cfg/ directory gives you some configuration files foo.cfg for almost each program. 


II. Install and compile
-----------

1. !!! IMPORTANT !!! Fill in the config.txt.ex file with your own parameters

2. sh install.sh 

3. 	For a FULL install, proceed as the following by typing this in a shell:
		make 
		make install
	For a PARTIAL install, say you only want to install TrainWorld:
		cd LIA_SpkDet/TrainWord
		make
		make install (only install TrainWorld)
		(make clean only clean this directory, make cleanlib clean libliatools)
		

To compile in debug mode:
	make clean
	make DEBUG=yes
	make DEBUG=yes install
	

The makefile system is recursive meaning you can do a complete make anywhere in the architecture by typing make, this will bring you to the package root and perform a complete make.

A 'make tags' will generate a lia_ral.tags file in your TAGS_DIR directory via the TAGS program (both have to be set in config.txt). ctags is the typical program to generate tags when using vi, etags is for emacs.

IMPORTANT NOTES FOR TROUBLESHOOTING:

If you have problems to compile, please read our howto: 
http://mistral.univ-avignon.fr/mistral_dev/pdf/mistral_technote.004.howToCompileMistral.pdf

Visit also the Faq section of the Mistral Wiki
http://mistral.univ-avignon.fr/wiki

Please note you can download binary file on http://mistral.univ-avignon.fr/download.html


III. Maintain
-------------

To add you own application:
1. Create a new directory in LIA_SpkDet or LIA_Seg, the name of the directory will be the name of your application.
2. Sub-directories and files has to placed exactly in the same way as in the other directories (source files placed in src/ is compulsory).
3. Copy a Makefile of another directory into your own.
4. Copy a Makefile of another src sub-directory into your own.
4. In a shell:
	make install

That's it!

IV. Misc.
---------

How to clean like Mr Proper
	make dist-clean
This will remove .depend files, objs directories, execs.

How to create an archive:
	make distrib
This will remove .depend files, CVS, execs and objs directories to make a proper package.

How to generate docs:
	make docs
This will invoke pdflatex to generate pdf docs in LIA_RAL/doc

How to generate doxygen:
	make doxygen
This will invoke doxygen to generate HTML docs in LIA_RAL/doc/doxygen

V. SVN
-------
You can use our SVN repository to download LIA_RAL applications. Access is:

svn://mistral.univ-avignon.fr/svn/LIA_RAL
http://mistral.univ-avignon.fr/svn/LIA_RAL

Latest stable version is in trunk. Current main version is in branches. Old versions ar in tags.

V. Bugs & Known Problems
-------
- You probably have to do make clean sometimes after an error or after updating ALIZE and LIA_TOOLS libraries.
- You have to do a make clean if you invoke make DEBUG=yes
- You have to do a make clean if you update alize lib.

- Any questions; mail the alize-devel list (see the MISTRAL website)


******************************************************************************
MISTRAL PROJECT / LIA Automatic Speaker Recognition Team
******************************************************************************

